# Generated by the protocol buffer compiler.  DO NOT EDIT!

from google.protobuf import descriptor
from google.protobuf import message
from google.protobuf import reflection
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)



DESCRIPTOR = descriptor.FileDescriptor(
  name='logical_ra.proto',
  package='',
  serialized_pb='\n\x10logical_ra.proto\"L\n\x15LogicalRaQueryMessage\x12\x0c\n\x04name\x18\x01 \x02(\t\x12%\n\toperators\x18\x03 \x03(\x0b\x32\x12.LogicalRaOperator\"\xc2\x02\n\x11LogicalRaOperator\x12\x36\n\x04type\x18\x01 \x02(\x0e\x32(.LogicalRaOperator.LogicalRaOperatorType\x12\x0c\n\x04name\x18\x02 \x02(\t\x12\x1a\n\x04scan\x18\x03 \x01(\x0b\x32\x0c.LogicalScan\x12\x1e\n\x06select\x18\x04 \x01(\x0b\x32\x0e.LogicalSelect\x12 \n\x07project\x18\x05 \x01(\x0b\x32\x0f.LogicalProject\x12\"\n\x08\x65quijoin\x18\x06 \x01(\x0b\x32\x10.LogicalEquiJoin\x12\x1c\n\x05\x63ross\x18\x07 \x01(\x0b\x32\r.LogicalCross\"G\n\x15LogicalRaOperatorType\x12\x08\n\x04SCAN\x10\x00\x12\x0b\n\x07PROJECT\x10\x01\x12\x0c\n\x08\x45QUIJOIN\x10\x02\x12\t\n\x05\x43ROSS\x10\x03\"\x1f\n\x0bLogicalScan\x12\x10\n\x08relation\x18\x01 \x02(\t\"5\n\rLogicalSelect\x12\x11\n\tchildName\x18\x01 \x02(\t\x12\x11\n\tcondition\x18\x02 \x02(\t\"4\n\x0eLogicalProject\x12\x11\n\tchildName\x18\x01 \x02(\t\x12\x0f\n\x07\x63olumns\x18\x02 \x03(\x05\"k\n\x0fLogicalEquiJoin\x12\x15\n\rleftChildName\x18\x01 \x02(\t\x12\x13\n\x0bleftColumns\x18\x02 \x03(\x05\x12\x16\n\x0erightChildName\x18\x03 \x02(\t\x12\x14\n\x0crightColumns\x18\x04 \x03(\x05\"=\n\x0cLogicalCross\x12\x15\n\rleftChildName\x18\x01 \x02(\t\x12\x16\n\x0erightChildName\x18\x02 \x02(\tB6\n$edu.washington.escience.myriad.protoB\x0eLogicalRaProto')



_LOGICALRAOPERATOR_LOGICALRAOPERATORTYPE = descriptor.EnumDescriptor(
  name='LogicalRaOperatorType',
  full_name='LogicalRaOperator.LogicalRaOperatorType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    descriptor.EnumValueDescriptor(
      name='SCAN', index=0, number=0,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='PROJECT', index=1, number=1,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='EQUIJOIN', index=2, number=2,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='CROSS', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=350,
  serialized_end=421,
)


_LOGICALRAQUERYMESSAGE = descriptor.Descriptor(
  name='LogicalRaQueryMessage',
  full_name='LogicalRaQueryMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='name', full_name='LogicalRaQueryMessage.name', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='operators', full_name='LogicalRaQueryMessage.operators', index=1,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=20,
  serialized_end=96,
)


_LOGICALRAOPERATOR = descriptor.Descriptor(
  name='LogicalRaOperator',
  full_name='LogicalRaOperator',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='type', full_name='LogicalRaOperator.type', index=0,
      number=1, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='name', full_name='LogicalRaOperator.name', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='scan', full_name='LogicalRaOperator.scan', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='select', full_name='LogicalRaOperator.select', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='project', full_name='LogicalRaOperator.project', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='equijoin', full_name='LogicalRaOperator.equijoin', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='cross', full_name='LogicalRaOperator.cross', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _LOGICALRAOPERATOR_LOGICALRAOPERATORTYPE,
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=99,
  serialized_end=421,
)


_LOGICALSCAN = descriptor.Descriptor(
  name='LogicalScan',
  full_name='LogicalScan',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='relation', full_name='LogicalScan.relation', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=423,
  serialized_end=454,
)


_LOGICALSELECT = descriptor.Descriptor(
  name='LogicalSelect',
  full_name='LogicalSelect',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='childName', full_name='LogicalSelect.childName', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='condition', full_name='LogicalSelect.condition', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=456,
  serialized_end=509,
)


_LOGICALPROJECT = descriptor.Descriptor(
  name='LogicalProject',
  full_name='LogicalProject',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='childName', full_name='LogicalProject.childName', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='columns', full_name='LogicalProject.columns', index=1,
      number=2, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=511,
  serialized_end=563,
)


_LOGICALEQUIJOIN = descriptor.Descriptor(
  name='LogicalEquiJoin',
  full_name='LogicalEquiJoin',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='leftChildName', full_name='LogicalEquiJoin.leftChildName', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='leftColumns', full_name='LogicalEquiJoin.leftColumns', index=1,
      number=2, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='rightChildName', full_name='LogicalEquiJoin.rightChildName', index=2,
      number=3, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='rightColumns', full_name='LogicalEquiJoin.rightColumns', index=3,
      number=4, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=565,
  serialized_end=672,
)


_LOGICALCROSS = descriptor.Descriptor(
  name='LogicalCross',
  full_name='LogicalCross',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='leftChildName', full_name='LogicalCross.leftChildName', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='rightChildName', full_name='LogicalCross.rightChildName', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=674,
  serialized_end=735,
)

_LOGICALRAQUERYMESSAGE.fields_by_name['operators'].message_type = _LOGICALRAOPERATOR
_LOGICALRAOPERATOR.fields_by_name['type'].enum_type = _LOGICALRAOPERATOR_LOGICALRAOPERATORTYPE
_LOGICALRAOPERATOR.fields_by_name['scan'].message_type = _LOGICALSCAN
_LOGICALRAOPERATOR.fields_by_name['select'].message_type = _LOGICALSELECT
_LOGICALRAOPERATOR.fields_by_name['project'].message_type = _LOGICALPROJECT
_LOGICALRAOPERATOR.fields_by_name['equijoin'].message_type = _LOGICALEQUIJOIN
_LOGICALRAOPERATOR.fields_by_name['cross'].message_type = _LOGICALCROSS
_LOGICALRAOPERATOR_LOGICALRAOPERATORTYPE.containing_type = _LOGICALRAOPERATOR;
DESCRIPTOR.message_types_by_name['LogicalRaQueryMessage'] = _LOGICALRAQUERYMESSAGE
DESCRIPTOR.message_types_by_name['LogicalRaOperator'] = _LOGICALRAOPERATOR
DESCRIPTOR.message_types_by_name['LogicalScan'] = _LOGICALSCAN
DESCRIPTOR.message_types_by_name['LogicalSelect'] = _LOGICALSELECT
DESCRIPTOR.message_types_by_name['LogicalProject'] = _LOGICALPROJECT
DESCRIPTOR.message_types_by_name['LogicalEquiJoin'] = _LOGICALEQUIJOIN
DESCRIPTOR.message_types_by_name['LogicalCross'] = _LOGICALCROSS

class LogicalRaQueryMessage(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _LOGICALRAQUERYMESSAGE
  
  # @@protoc_insertion_point(class_scope:LogicalRaQueryMessage)

class LogicalRaOperator(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _LOGICALRAOPERATOR
  
  # @@protoc_insertion_point(class_scope:LogicalRaOperator)

class LogicalScan(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _LOGICALSCAN
  
  # @@protoc_insertion_point(class_scope:LogicalScan)

class LogicalSelect(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _LOGICALSELECT
  
  # @@protoc_insertion_point(class_scope:LogicalSelect)

class LogicalProject(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _LOGICALPROJECT
  
  # @@protoc_insertion_point(class_scope:LogicalProject)

class LogicalEquiJoin(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _LOGICALEQUIJOIN
  
  # @@protoc_insertion_point(class_scope:LogicalEquiJoin)

class LogicalCross(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _LOGICALCROSS
  
  # @@protoc_insertion_point(class_scope:LogicalCross)

# @@protoc_insertion_point(module_scope)
